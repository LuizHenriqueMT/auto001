name: Parallel Cypress Tests
on: push
jobs:
  initial_tests:
    name: Initial Cypress run
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        container: [1, 2]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Configure Allure
        run: npm install -g allure-commandline --save-dev

      - name: Write the cypress.env.json file
        run: |
          echo '${{ secrets.CYPRESS_ENV_CI }}' > cypress.env.json

      - name: Run initial Cypress tests        
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          group: "Initial Tests"
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
          spec: "cypress/e2e/!(login.cy.js|produto.cy.js|entregaProduto.cy.js|funcionario.cy.js|loginTentativa.cy.js|novoWorkspace.cy.js|loginTentativa_1.cy.js|loginTentativa_2.cy.js)"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # allure: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results-${{ matrix.container }}
          path: allure-results/

  merge_results:
    name: Merge Cypress Test Results
    runs-on: ubuntu-22.04
    needs: initial_tests
    if: success() || failure()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Configure Allure
        run: npm install -g allure-commandline --save-dev

      - name: Download test results from all jobs
        uses: actions/download-artifact@v4
        with:
          name: cypress-results-1
          path: allure-results-1/

      - uses: actions/download-artifact@v4
        with:
          name: cypress-results-2
          path: allure-results-2/

      - uses: actions/download-artifact@v4
        with:
          name: cypress-results-3
          path: allure-results-3/

      - uses: actions/download-artifact@v4
        with:
          name: cypress-results-4
          path: allure-results-4/

      - name: Merge test results
        run: |
          mkdir -p merged-allure-results
          cp -r allure-results-1/* merged-allure-results/
          cp -r allure-results-2/* merged-allure-results/
          cp -r allure-results-3/* merged-allure-results/
          cp -r allure-results-4/* merged-allure-results/

      - name: Generate Allure report
        run: allure generate merged-allure-results --clean -o allure-report --lang br

      # - name: Commit Allure report
      #   run: |
      #     git config --global user.name 'Luiz Henrique'
      #     git config --global user.email 'luizh.mtiscoski@hotmail.com'
      #     git add allure-report
      #     git commit -m "Add Allure report"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #   - name: Send Email
    #     if: always()
    #     run: |
    #       if [ -f ./cypress/results/index.html ]; then
    #         node -e "
    #         const nodemailer = require('nodemailer');
    #         const fs = require('fs');
    #         const path = require('path');
            
    #         async function sendEmail() {
    #           let transporter = nodemailer.createTransport({
    #             service: 'SendGrid',
    #             auth: {
    #               user: 'apikey',
    #               pass: process.env.SENDGRID_API_KEY
    #             }
    #           });

    #           let info = await transporter.sendMail({
    #             from: process.env.EMAIL_USER,
    #             to: process.env.EMAIL_TO,
    #             subject: 'Relatório de Testes Cypress',
    #             text: 'O relatório dos testes Cypress está disponível.',
    #             attachments: [
    #               {
    #                 filename: 'teste.txt',
    #                 path: './cypress/allure-report/teste.txt'
    #               }
    #             ]
    #           });

    #           console.log('Email enviado: %s', info.messageId);
    #         }

    #         sendEmail().catch(console.error);
    #         "
    #       else
    #         echo "Allure report not found."
    #       fi

    # env:
    #   EMAIL_USER: ${{ secrets.EMAIL_USER }}
    #   SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
    #   EMAIL_TO: ${{ secrets.EMAIL_TO }}          

  # login_test_part1:
  #   name: Login Cypress run with delay - Part 1
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Run login Cypress test - part 1
  #       uses: cypress-io/github-action@v6
  #       with:
  #         record: true
  #         parallel: false
  #         group: "Login Test 1"
  #         ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
  #         spec: "cypress/e2e/loginTentativa.cy.js"
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       continue-on-error: true
       
  #     - name: Upload email and timestamp artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: login-artifacts
  #         path: cypress/upload/

  #     - name: Wait for 10 minutes
  #       run: sleep 3

  #     - name: Upload test results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cypress-results-${{ matrix.container }}
  #         path: cypress/results/

  # login_test_part2:
  #   name: Login Cypress run with delay - Part 2
  #   runs-on: ubuntu-22.04
  #   needs: login_test_part1
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Download email and timestamp artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: login-artifacts
  #         path: cypress/upload/

  #     - name: Run login Cypress test - part 2
  #       uses: cypress-io/github-action@v6
  #       with:
  #         record: true
  #         parallel: false
  #         group: "Login Test 2"
  #         ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
  #         spec: "cypress/e2e/loginTentativa_2.cy.js"
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Upload test results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cypress-results-${{ matrix.container }}
  #         path: cypress/results/